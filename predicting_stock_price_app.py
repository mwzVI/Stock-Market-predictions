# -*- coding: utf-8 -*-
"""Predicting Stock Price App

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1onQCQLeeIMkGtAbxmRgcr9wlE2_axlEX
"""

import streamlit as st
import datetime as dt
import yfinance as yf
from fbprophet import Prophet
from fbprophet.plot import plot_plotly
from plotly import graph_objs as go

start = dt.datetime(2015, 1, 1)
end = dt.datetime.now()

st.title('Stock Prediction App')

stocks = ('TSLA', 'GOOG', 'AAPL', 'MSFT')
selected_stocks = st.selectbox('Select Dataset for Predictions', stocks)

n_years = st.slider('Years of Prediction: ', 1, 4)
period = n_years * 365

def load_data(ticker):
    data = yf.download(ticker, start, end)
    data.reset_index(inplace=True)
    return data

data_load_state = st.text("Load Data...")
data = load_data(selected_stocks)
data_load_state.text('Loading data...Done!')

st.subheader('Raw Data')
st.write(data.tail())

def plot_raw_data():
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=data['Date'], y=data['Open'], name='Stock_Open'))
    fig.add_trace(go.Scatter(x=data['Date'], y=data['Close'], name='Stock_Close'))
    fig.layout.update(title_text='Time Series Data', xaxis_rangeslinder_visible=True)
    st.plotly_chart(fig)
    
#Forecasting
df_train = data[['Date', 'Close']]
df_train = df_train.rename(columns={'Date':'ds', 'Close':'y'})

m = Prophet()
m.fit(df_train)
future = m.make_future_dataframe(periods = period)
forecast = m.predict(future)

st.subheader('Forecast Data')
st.write(forecast.tail())

st.write('Forecast Data')
fig1 = plot_plotly(m, forecast)
st.plotly_chart(fig1)

st.write('Forecast Components')
fig2 = m.plot_components(forecast)
st.write(fig2)

